"""Bazel Module for WebAssembly Component Model Rules"""

module(
    name = "rules_wasm_component",
    version = "1.0.0",
    compatibility_level = 1,
)

# Dependencies for WebAssembly tooling
bazel_dep(name = "rules_rust", version = "0.62.0")

# Git override to use rules_rust fork with wasm32-wasip2 support  
git_override(
    module_name = "rules_rust",
    commit = "1945773a",  # Fixed rust_toolchain for WASI SDK tools
    remote = "https://github.com/avrabe/rules_rust.git",
)

bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.11")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_go", version = "0.55.1")

# Development dependencies
bazel_dep(name = "buildifier_prebuilt", version = "6.4.0", dev_dependency = True)
bazel_dep(name = "stardoc", version = "0.7.1", dev_dependency = True)

# Rust toolchain setup
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    extra_target_triples = [
        "wasm32-unknown-unknown",
        "wasm32-wasip1",
        "wasm32-wasip2",  # Now supported with patched rules_rust
    ],
    versions = ["1.88.0"],
)
use_repo(rust, "rust_toolchains")

# Register toolchains
register_toolchains("@rust_toolchains//:all")

# WebAssembly toolchains
wasm_toolchain = use_extension("//wasm:extensions.bzl", "wasm_toolchain")
wasm_toolchain.register(
    name = "wasm_tools",
    strategy = "download",
    version = "1.235.0",
)
use_repo(wasm_toolchain, "wasm_tools_toolchains")

register_toolchains("@wasm_tools_toolchains//:all")

# WebAssembly Package Tools (wkg) toolchain
wkg = use_extension("//wasm:extensions.bzl", "wkg")
wkg.register(
    name = "wkg",
    strategy = "download",
    version = "0.11.0",
)
use_repo(wkg, "wkg_toolchain")

register_toolchains("@wkg_toolchain//:wkg_toolchain_def")

# WASI SDK toolchain
wasi_sdk = use_extension("//wasm:extensions.bzl", "wasi_sdk")
wasi_sdk.register(
    name = "wasi",
    strategy = "download",
    version = "25",
)
use_repo(wasi_sdk, "wasi_sdk")

# Register both WASI SDK and C++ toolchains
register_toolchains(
    "@wasi_sdk//:wasi_sdk_toolchain",
    "@wasi_sdk//:cc_toolchain",
)

# TinyGo WASI Preview 2 toolchain
tinygo = use_extension("//wasm:extensions.bzl", "tinygo")
tinygo.register(
    name = "tinygo",
    tinygo_version = "0.38.0",
)
use_repo(tinygo, "tinygo_toolchain")

register_toolchains("@tinygo_toolchain//:tinygo_toolchain_def")

# Modernized WASM tool repositories using git_repository + rules_rust
wasm_tool_repos = use_extension("//toolchains:extensions.bzl", "wasm_tool_repositories")
use_repo(wasm_tool_repos, 
    "wasm_tools_src", 
    "wac_src", 
    "wit_bindgen_src", 
    "wrpc_src"
)

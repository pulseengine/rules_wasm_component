{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(bazel build:*)",
      "Bash(bazel:*)",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(ls:*)",
      "WebFetch(domain:registry.bazel.build)",
      "WebFetch(domain:github.com)",
      "Bash(git add:*)",
      "WebFetch(domain:stackoverflow.com)",
      "Bash(rustc:*)",
      "Bash(cargo build:*)",
      "Bash(gh run view:*)",
      "Bash(gh run list:*)",
      "Bash(grep:*)",
      "Bash(gh issue view:*)",
      "Bash(gh run watch:*)",
      "mcp__fetch__imageFetch",
      "Bash(curl:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(gh issue comment:*)",
      "Bash(@wasm_tools_toolchains//:wit_bindgen_binary generate test_multi_interface.wit --world camera-front --out-dir /tmp/test_wit)",
      "WebFetch(domain:bytecodealliance.github.io)",
      "WebFetch(domain:bazelbuild.github.io)",
      "Bash(mkdir:*)",
      "Bash(wasm-tools component:*)",
      "Bash(wac compose:*)",
      "Bash(-//examples/world_export/... )",
      "Bash(-//examples/multi_profile/... )",
      "Bash(-//test_wac/... )",
      "Bash(-//examples/basic:hello_component_wasm_lib_release )",
      "Bash(-//test/export_macro:test_component_wasm_lib_release )",
      "Bash(-//test/integration:basic_component_wasm_lib_debug )",
      "Bash(-//test/integration:basic_component_wasm_lib_release )",
      "Bash(-//test/integration:consumer_component_wasm_lib_release )",
      "Bash(-//test/integration:service_a_component_wasm_lib_release )",
      "Bash(-//test/integration:service_b_component_wasm_lib_release )",
      "Bash(-//test/integration:wasi_component_wasm_lib_release )",
      "Bash(-//test/unit:test_component_simple_wasm_lib_release )",
      "Bash(-//test/unit:test_component_with_deps_wasm_lib_release )",
      "Bash(-//test_examples/basic:hello_component_wasm_lib_release )",
      "Bash(-//test_examples/dependencies/consumer:consumer_component_wasm_lib_release )",
      "Bash(-//test_wit_deps/consumer:consumer_component_wasm_lib_release)",
      "mcp__puppeteer__puppeteer_screenshot"
    ],
    "deny": []
  }
}
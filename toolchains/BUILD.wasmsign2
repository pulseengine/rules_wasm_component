"""BUILD file for wasmsign2 repository

This file creates wasmsign2 binary using both cargo (legacy) and Bazel-native rust_binary.
The rust_binary approach eliminates cargo sandbox issues and provides true hermeticity.
"""

load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library")

# Bazel-native rust_binary build (NEW: eliminates cargo sandbox issues)
rust_binary(
    name = "wasmsign2_bazel",
    srcs = [
        "src/cli/main.rs",
    ],
    crate_name = "wasmsign2",
    edition = "2021",
    deps = [
        ":wasmsign2_lib",
        # CLI-specific dependencies from wasmsign2 CLI Cargo.toml
        "@wasmsign2_crates//:clap",
        "@wasmsign2_crates//:env_logger",
        "@wasmsign2_crates//:regex",
        "@wasmsign2_crates//:ureq",
        "@wasmsign2_crates//:uri_encode",
    ],
    visibility = ["//visibility:public"],
)

# Supporting library crate for Bazel-native build
rust_library(
    name = "wasmsign2_lib",
    srcs = glob([
        "src/lib/src/**/*.rs",
    ]),
    crate_root = "src/lib/src/lib.rs",
    crate_name = "wasmsign2",
    edition = "2021",
    deps = [
        # Core dependencies from wasmsign2 library Cargo.toml
        "@wasmsign2_crates//:anyhow",
        "@wasmsign2_crates//:ct-codecs",
        "@wasmsign2_crates//:ed25519-compact",
        "@wasmsign2_crates//:getrandom",
        "@wasmsign2_crates//:hmac-sha256",
        "@wasmsign2_crates//:log",
        "@wasmsign2_crates//:regex",
        "@wasmsign2_crates//:ssh-keys",
        "@wasmsign2_crates//:thiserror",
    ],
    visibility = ["//visibility:public"],
)

# Legacy cargo build (for backward compatibility during transition)
genrule(
    name = "wasmsign2",
    srcs = glob(["**/*"]),  # All source files
    outs = ["wasmsign2"],
    cmd = """cd $$(dirname $(location Cargo.toml)) && \
             cargo build --release --bin wasmsign2 && \
             cp target/release/wasmsign2 $(location wasmsign2)""",
    visibility = ["//visibility:public"],
    tags = ["requires-network"],  # Cargo may need to fetch dependencies
)

# Export the legacy binary for toolchain use
filegroup(
    name = "wasmsign2_binary",
    srcs = [":wasmsign2"],
    visibility = ["//visibility:public"],
)
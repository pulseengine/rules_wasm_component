"""Example demonstrating wit-bindgen macro approach

This example shows how to use wit_bindgen::generate!() macro directly
in source code instead of generating separate binding crates.
"""

load("//rust:rust_wasm_component_macro.bzl", "rust_wasm_component_macro")
load("//wit:wit_library.bzl", "wit_library")

# WIT interface definition
wit_library(
    name = "macro_interfaces",
    srcs = ["wit/macro-example.wit"],
)

# Component using wit-bindgen macro approach
rust_wasm_component_macro(
    name = "macro_component",
    srcs = ["src/lib.rs"],
    profiles = [
        "debug",
        "release",
    ],
    visibility = ["//visibility:public"],
    wit = ":macro_interfaces",
)

# Host application using the generated bindings
load("@rules_rust//rust:defs.bzl", "rust_binary")

rust_binary(
    name = "host_app",
    srcs = ["src/host.rs"],
    deps = [":macro_component_host"],  # Use host-platform bindings
)

"""Example of using rust_wasm_component for CLI tools without custom WIT interfaces"""

load("@rules_wasm_component//rust:defs.bzl", "rust_wasm_component", "rust_wasm_component_bindgen")
load("@rules_wasm_component//wit:defs.bzl", "wit_library")

package(default_visibility = ["//visibility:public"])

# Example 1: CLI Tool using rust_wasm_component (no custom WIT interfaces)
# Use case: Command-line utilities that only use WASI capabilities
rust_wasm_component(
    name = "file_processor_cli",
    srcs = ["src/cli_tool.rs"],
    # This component doesn't need custom WIT - uses standard WASI only
    # No 'wit' attribute needed
    rustc_flags = [
        "-C",
        "opt-level=3",  # Custom optimization
        # Note: LTO is incompatible with WebAssembly builds that use embed-bitcode=no
    ],
    deps = [
        "@crates//:anyhow",  # Error handling
        "@crates//:chrono",  # Date/time handling
        "@crates//:clap",  # CLI argument parsing
        "@crates//:serde_json",  # JSON processing
    ],
)

# Example 2: Component with Custom Interface using rust_wasm_component_bindgen
# Use case: Components that export custom functions to other components
wit_library(
    name = "processor_interfaces",
    package_name = "example:processor@1.0.0",
    srcs = ["wit/processor.wit"],
)

rust_wasm_component_bindgen(
    name = "file_processor_component",
    srcs = ["src/component_lib.rs"],
    # This automatically generates WIT bindings and handles interface exports
    profiles = ["release"],
    wit = ":processor_interfaces",
)

# Comparison test to show the difference
genrule(
    name = "component_comparison",
    srcs = [
        ":file_processor_cli",
        ":file_processor_component",
    ],
    outs = ["comparison.txt"],
    cmd = """
echo "Component Size Comparison" > $@
echo "========================" >> $@
echo "" >> $@
echo "CLI Tool (rust_wasm_component):" >> $@
wc -c $(location :file_processor_cli) >> $@
echo "" >> $@
echo "Component Library (rust_wasm_component_bindgen):" >> $@
wc -c $(location :file_processor_component) >> $@
echo "" >> $@
echo "Use rust_wasm_component for:" >> $@
echo "- CLI tools and utilities" >> $@
echo "- WASI-only components" >> $@
echo "- Legacy WASM module conversion" >> $@
echo "- Custom build requirements" >> $@
echo "" >> $@
echo "Use rust_wasm_component_bindgen for:" >> $@
echo "- Components with custom interfaces" >> $@
echo "- Inter-component communication" >> $@
echo "- Standard component development" >> $@
    """,
)

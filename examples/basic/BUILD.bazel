"""Basic example of building a WASM component"""

load("@rules_wasm_component//rust:defs.bzl", "rust_wasm_component_bindgen", "rust_wasm_component_test")
load("@rules_wasm_component//wit:defs.bzl", "wit_library")

package(default_visibility = ["//visibility:public"])

# Define WIT interfaces
wit_library(
    name = "hello_interfaces",
    package_name = "hello:interfaces",
    srcs = ["wit/hello.wit"],
    world = "hello",
)

# Build Rust WASM component with automatic WIT binding generation
rust_wasm_component_bindgen(
    name = "hello_component",
    srcs = ["src/lib.rs"],
    profiles = ["release"],  # Build release profile
    validate_wit = True,  # Enable WIT compliance validation
    wit = ":hello_interfaces",
)

# Test the component
rust_wasm_component_test(
    name = "hello_component_test",
    component = ":hello_component",
)

# Run clippy on the component
# TODO: Fix clippy to work with transitioned targets
# rust_wasm_component_clippy(
#     name = "hello_component_clippy",
#     target = ":hello_component",
# )

load("//cpp:defs.bzl", "cc_component_library", "cpp_component", "cpp_wit_bindgen")

# WIT bindings generation
cpp_wit_bindgen(
    name = "http_service_bindings",
    wit = "wit/http_service.wit",
    world = "http-service-world",
)

# Shared HTTP utilities library
cc_component_library(
    name = "http_utils",
    srcs = ["src/http_utils.c"],
    hdrs = ["src/http_utils.h"],
    target_compatible_with = ["@platforms//cpu:wasm32"],
)

# Request parser library
cc_component_library(
    name = "request_parser",
    srcs = ["src/request_parser.c"],
    hdrs = ["src/request_parser.h"],
    target_compatible_with = ["@platforms//cpu:wasm32"],
    deps = [":http_utils"],
)

# Response builder library
cc_component_library(
    name = "response_builder",
    srcs = ["src/response_builder.c"],
    hdrs = ["src/response_builder.h"],
    target_compatible_with = ["@platforms//cpu:wasm32"],
    deps = [":http_utils"],
)

# Main HTTP service component (C implementation)
cpp_component(
    name = "http_service_component",
    srcs = ["src/http_service.c"],
    hdrs = ["src/http_service.h"],
    language = "c",
    target_compatible_with = ["@platforms//cpu:wasm32"],
    visibility = ["//visibility:public"],
    wit = "wit/http_service.wit",
    world = "http-service-world",
    deps = [
        ":http_utils",
        ":request_parser",
        ":response_builder",
    ],
)

# Test executable (runs on host, not WASM)
# NOTE: Disabled - cc_test cannot depend on WebAssembly component libraries
# cc_test(
#     name = "http_service_test",
#     srcs = ["test/http_service_test.c"],
#     deps = [
#         ":http_utils",
#         ":request_parser",
#         ":response_builder",
#     ],
#     # Note: Tests run on host platform, not WASM
# )

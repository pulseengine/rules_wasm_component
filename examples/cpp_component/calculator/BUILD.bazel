"""C/C++ Calculator Component Example"""

load("@rules_wasm_component//cpp:defs.bzl", "cc_component_library", "cpp_component", "cpp_wit_bindgen")

package(default_visibility = ["//visibility:public"])

# Generate C++ bindings from WIT
cpp_wit_bindgen(
    name = "calculator_bindings",
    string_encoding = "utf8",
    wit = "wit/calculator.wit",
    world = "calculator",
)

# Math utilities library
cc_component_library(
    name = "math_utils",
    srcs = ["src/math_utils.cpp"],
    hdrs = ["src/math_utils.h"],
    cxx_std = "c++20",
    enable_exceptions = False,  # WASI SDK doesn't support C++ exceptions
    language = "cpp",
    optimize = True,
)

# Calculator component (C++)
cpp_component(
    name = "calculator_cpp_component",
    package_name = "example:calculator@1.0.0",
    srcs = [
        "src/calculator.cpp",
    ],
    hdrs = [
        "src/calculator_impl.h",
    ],
    cxx_std = "c++20",
    enable_exceptions = False,  # WASI SDK doesn't support C++ exceptions
    language = "cpp",
    optimize = True,
    validate_wit = True,  # Validate WIT compliance
    wit = "wit/calculator.wit",
    world = "calculator",
    deps = [":math_utils"],
)

# Pure C version of calculator
cpp_component(
    name = "calculator_c_component",
    package_name = "example:calculator-c@1.0.0",
    srcs = [
        "src/calculator_c.c",
    ],
    hdrs = [
        "src/calculator_c.h",
    ],
    language = "c",
    optimize = True,
    validate_wit = True,  # Validate WIT compliance
    wit = "wit/calculator.wit",
    world = "calculator",
)

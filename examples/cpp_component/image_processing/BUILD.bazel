load("//cpp:defs.bzl", "cc_component_library", "cpp_component", "cpp_wit_bindgen")

# WIT bindings generation
cpp_wit_bindgen(
    name = "image_processing_bindings",
    wit = "wit/image_processing.wit",
    world = "image-processor-world",
)

# SIMD utilities library
cc_component_library(
    name = "simd_utils",
    srcs = ["src/simd_utils.cpp"],
    hdrs = ["src/simd_utils.h"],
    copts = [
        "-msimd128",  # Enable WebAssembly SIMD
        "-O3",  # Optimize for performance
    ],
    target_compatible_with = ["@platforms//cpu:wasm32"],
)

# Color space conversion library
# NOTE: Disabled - missing implementation file
# cc_component_library(
#     name = "color_space",
#     srcs = ["src/color_space.cpp"],
#     hdrs = ["src/color_space.h"],
#     copts = [
#         "-msimd128",
#         "-O3",
#     ],
#     target_compatible_with = ["@platforms//cpu:wasm32"],
#     deps = [":simd_utils"],
# )

# Filtering algorithms library
# NOTE: Disabled - missing implementation file
# cc_component_library(
#     name = "filters",
#     srcs = ["src/filters.cpp"],
#     hdrs = ["src/filters.h"],
#     copts = [
#         "-msimd128",
#         "-O3",
#     ],
#     target_compatible_with = ["@platforms//cpu:wasm32"],
#     deps = [
#         ":color_space",
#         ":simd_utils",
#     ],
# )

# Transform operations library
# NOTE: Disabled - missing source files
# cc_component_library(
#     name = "transforms",
#     srcs = ["src/transforms.cpp"],
#     hdrs = ["src/transforms.h"],
#     copts = [
#         "-msimd128",
#         "-O3",
#     ],
#     target_compatible_with = ["@platforms//cpu:wasm32"],
#     deps = [
#         ":color_space",
#         ":simd_utils",
#     ],
# )

# Analysis algorithms library
# NOTE: Disabled - missing source files
# cc_component_library(
#     name = "analysis",
#     srcs = ["src/analysis.cpp"],
#     hdrs = ["src/analysis.h"],
#     copts = [
#         "-msimd128",
#         "-O3",
#     ],
#     target_compatible_with = ["@platforms//cpu:wasm32"],
#     deps = [
#         ":color_space",
#         ":simd_utils",
#     ],
# )

# Main image processing component
# NOTE: Disabled - depends on missing components and missing main source files
# cpp_component(
#     name = "image_processing_component",
#     srcs = ["src/image_processor.cpp"],
#     hdrs = ["src/image_processor.h"],
#     copts = [
#         "-msimd128",
#         "-O3",
#     ],
#     target_compatible_with = ["@platforms//cpu:wasm32"],
#     visibility = ["//visibility:public"],
#     wit = "wit/image_processing.wit",
#     world = "image-processor",
#     deps = [
#         ":simd_utils",
#     ],
# )

# Benchmark executable (runs on host, not WASM)
# NOTE: Disabled - cc_binary cannot depend on WebAssembly component libraries
# cc_binary(
#     name = "image_processing_benchmark",
#     srcs = ["test/benchmark.cpp"],
#     copts = ["-O3"],
#     deps = [
#         ":analysis",
#         ":color_space",
#         ":filters",
#         ":simd_utils",
#         ":transforms",
#     ],
# )

# Test executable (runs on host, not WASM)
# NOTE: Disabled - cc_test cannot depend on WebAssembly component libraries
# cc_test(
#     name = "image_processing_test",
#     srcs = ["test/image_processing_test.cpp"],
#     data = [
#         "data/test_image_large.raw",
#         "data/test_image_small.raw",
#     ],
#     deps = [
#         ":analysis",
#         ":color_space",
#         ":filters",
#         ":simd_utils",
#         ":transforms",
#     ],
# )

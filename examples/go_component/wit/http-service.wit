package example:http-service@1.0.0;

interface http-service {
    record http-request {
        method: string,
        path: string,
        headers: list<tuple<string, string>>,
        body: string,
    }

    record http-response {
        status: u32,
        headers: list<tuple<string, string>>,
        body: string,
    }

    record service-info {
        name: string,
        version: string,
        description: string,
        endpoints: list<string>,
        uptime: u64,
        requests: u64,
    }

    handle-request: func(request: http-request) -> http-response;
    get-service-info: func() -> service-info;
}

world http-service-world {
    // TinyGo runtime requires these WASI interfaces
    import wasi:io/streams@0.2.0;
    import wasi:cli/environment@0.2.0;
    import wasi:cli/exit@0.2.0;
    import wasi:cli/stdin@0.2.0;
    import wasi:cli/stdout@0.2.0;
    import wasi:cli/stderr@0.2.0;
    import wasi:clocks/monotonic-clock@0.2.0;
    import wasi:clocks/wall-clock@0.2.0;
    import wasi:filesystem/types@0.2.0;
    import wasi:filesystem/preopens@0.2.0;
    import wasi:random/random@0.2.0;

    export http-service;
}

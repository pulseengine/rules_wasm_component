name: Deploy Documentation to Netcup

# Workflow for deploying documentation site to hosting
on:
  push:
    branches:
      - main
    paths:
      - "docs-site/**"
  workflow_dispatch:
    inputs:
      force_deploy:
        description: "Force deployment even if no docs-site changes"
        required: false
        default: "false"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Only run on main branch to prevent accidental deployments
    if: github.ref == 'refs/heads/main'
    env:
      NETCUP_URI: ${{ secrets.NETCUP_URI }}
      NETCUP_USER: ${{ secrets.NETCUP_USER }}
      NETCUP_PASSWORD: ${{ secrets.NETCUP_PASSWORD }}
      CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
      CLOUDFLARE_TOKEN: ${{ secrets.CLOUDFLARE_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: docs-site/package-lock.json

      - name: Install dependencies
        run: |
          cd docs-site
          npm ci

      - name: Build documentation site
        run: |
          cd docs-site
          npm run build

      - name: Deploy to Netcup hosting
        # Only deploy if secrets are available
        if: env.NETCUP_URI != '' && env.NETCUP_USER != '' && env.NETCUP_PASSWORD != ''
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ env.NETCUP_URI }}
          username: ${{ env.NETCUP_USER }}
          password: ${{ env.NETCUP_PASSWORD }}
          local-dir: ./docs-site/dist/
          server-dir: /
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.DS_Store
            **/Thumbs.db

      - name: Skip deployment (secrets not configured)
        if: env.NETCUP_URI == '' || env.NETCUP_USER == '' || env.NETCUP_PASSWORD == ''
        run: echo "Skipping deployment - Netcup secrets not configured"

      - name: Purge Cloudflare cache (optional)
        if: env.CLOUDFLARE_ZONE_ID != ''
        uses: jakejarvis/cloudflare-purge-action@master
        with:
          zone: ${{ env.CLOUDFLARE_ZONE_ID }}
          token: ${{ env.CLOUDFLARE_TOKEN }}

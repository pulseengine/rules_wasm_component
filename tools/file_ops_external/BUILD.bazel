"""Wrapper for external file operations WASM component

This wrapper executes the pre-built WASM component from bazel-file-ops-component
via wasmtime, with AOT extraction for faster startup (100x improvement).
"""

load("@rules_go//go:def.bzl", "go_binary")
load("//wasm:wasm_embed_aot.bzl", "wasm_extract_aot")

package(default_visibility = ["//visibility:public"])

# Wrapper binary that executes external WASM component with AOT extraction
go_binary(
    name = "file_ops_external",
    srcs = ["main.go"],
    pure = "on",
    data = [
        ":file_ops_aot",  # Platform-specific AOT artifact (extracted at build time)
        "@file_ops_component_external//file",  # Fallback to regular WASM if needed
        "@wasmtime_toolchain//:wasmtime",
    ],
    deps = ["@rules_go//go/runfiles"],
    visibility = ["//visibility:public"],
)

# Export for easy access in toolchains
alias(
    name = "file_ops_external_binary",
    actual = ":file_ops_external",
    visibility = ["//visibility:public"],
)

# AOT extraction targets for each platform
# These extract the precompiled native code from the AOT-embedded component

wasm_extract_aot(
    name = "file_ops_aot_linux_x64",
    component = "@file_ops_component_external//file",
    target_name = "linux-x64",
)

wasm_extract_aot(
    name = "file_ops_aot_linux_arm64",
    component = "@file_ops_component_external//file",
    target_name = "linux-arm64",
)

wasm_extract_aot(
    name = "file_ops_aot_darwin_x64",
    component = "@file_ops_component_external//file",
    target_name = "darwin-x64",
)

wasm_extract_aot(
    name = "file_ops_aot_darwin_arm64",
    component = "@file_ops_component_external//file",
    target_name = "darwin-arm64",
)

wasm_extract_aot(
    name = "file_ops_aot_windows_x64",
    component = "@file_ops_component_external//file",
    target_name = "windows-x64",
)

wasm_extract_aot(
    name = "file_ops_aot_portable",
    component = "@file_ops_component_external//file",
    target_name = "portable",
)

# Filegroup containing all AOT artifacts
# The Go wrapper will select the correct one at runtime based on the platform
filegroup(
    name = "file_ops_aot",
    srcs = [
        ":file_ops_aot_linux_x64",
        ":file_ops_aot_linux_arm64",
        ":file_ops_aot_darwin_x64",
        ":file_ops_aot_darwin_arm64",
        ":file_ops_aot_windows_x64",
        ":file_ops_aot_portable",
    ],
    visibility = ["//visibility:public"],
)
